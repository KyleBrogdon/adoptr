/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/siteAdmin/usersSA.js":
/*!**********************************!*\
  !*** ./src/siteAdmin/usersSA.js ***!
  \**********************************/
/***/ (() => {

eval("// Site Admin Users page\r\n// Database access:\r\n// CREATE/READ/UPDATE/DESTROY to the usser table\r\n\r\n// const userModal = new bootstrap.Modal(document.getElementById('userModal'), {\r\n//     keyboard: false\r\n// });\r\n  \r\nconst updateUserModal = new bootstrap.Modal(document.getElementById('updateUserModal'), {\r\n    keyboard: false\r\n});\r\n  \r\n  \r\nclass UserEntry {\r\n    constructor(\r\n      userID,\r\n      firstName,\r\n      lastName,\r\n      zipCode,\r\n      email,\r\n      adminStatus\r\n    ) {\r\n      this.userID = userID;\r\n      this.firstName = firstName;\r\n      this.lastName = lastName;\r\n      this.zipCode = zipCode;\r\n      this.email = email;\r\n      this.password = email;\r\n      this.adminStatus = adminStatus;\r\n    }\r\n  \r\n    generateRow() {\r\n      let element = document.createElement(\"tr\");\r\n      element.innerHTML = `\r\n        <th scope=\"row\">${this.userID}</th>\r\n        <td>\r\n          <span>${this.firstName}</span>\r\n          <data hidden id=\"firstName-${this.userID}\" value = ${this.firstName}></data>\r\n        </td>\r\n  \r\n        <td>\r\n          <span>${this.lastName}</span>\r\n          <data hidden id=\"lastName-${this.userID}\" value = ${this.lastName}></data>\r\n        </td>\r\n  \r\n        <td>\r\n          <span>${this.zipCode}</span>\r\n          <data hidden id=\"zipCode-${this.userID}\" value = ${this.zipCode}></data>\r\n        </td>\r\n  \r\n        <td>\r\n          <span>${this.email}</span>\r\n          <data hidden id=\"email-${this.userID}\" value = ${this.email}></data>\r\n        </td>\r\n\r\n        <td>\r\n          <span>${this.adminStatus}</span>\r\n          <data hidden id=\"adminStatus-${this.userID}\" value = ${this.adminStatus}></data>\r\n        </td>\r\n\r\n        <!--<td>\r\n          <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" id=\"expand-button-${this.userID}\" value = ${this.userID}>Expand</button>\r\n        </td>-->\r\n        <td>\r\n        <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" id=\"delete-button-${this.userID}\" >Delete</button>\r\n        </td>\r\n      `;\r\n      return element;\r\n    }\r\n  \r\n    generateOption() {\r\n      let element = document.createElement(\"option\");\r\n      element.innerHTML = `<option value=\"${this.userID}\">${this.userID}</option>`;\r\n      return element;\r\n    }\r\n  \r\n};\r\n  \r\n  \r\n  \r\nfunction addEventListeners(user){\r\n    document.getElementById(`delete-button-${user.userID}`).addEventListener(\"click\", () => { //add delete\r\n        // var req = new XMLHttpRequest();\r\n        // var payload = \"/admin/deleteUser?userID=\" + user.userID ;\r\n        // console.log(\"sending \" + payload);\r\n        // req.open(\"POST\", payload, true);\r\n        // req.send();\r\n        // location.reload();\r\n        console.log(\"delete button enabled\")\r\n    });\r\n  \r\n    // document.getElementById(`expand-button-${user.userID}`).addEventListener(\"click\", () => {\r\n    //   var id = {userID:null};\r\n\r\n    //   id.userID = document.getElementById(`expand-button-${user.userID}`).value;\r\n\r\n\r\n    //   var reqOrders = new XMLHttpRequest();\r\n    //   var payload = \"/siteAdmin/customerOrders?customerID=\" + id.userID;\r\n    //   console.log(payload);\r\n    //   reqOrders.open(\"GET\", payload, true);\r\n    //   reqOrders.send();\r\n    //   var orderResponse;\r\n    //   reqOrders.onreadystatechange =function(){\r\n    //     if(reqOrders.readyState === XMLHttpRequest.DONE && reqOrders.status >= 200 && reqOrders.status < 300){\r\n    //       orderResponse = reqOrders.responseText;\r\n    //       orderResponse = JSON.parse(orderResponse);\r\n    //       let modalTable = document.getElementById(\"modal-table\");\r\n    //       while(modalTable.firstChild){\r\n    //         modalTable.removeChild(modalTable.firstChild)\r\n    //       }\r\n  \r\n    //       orderResponse.forEach((order,index) =>{\r\n    //         let element = document.createElement(\"tr\");\r\n    //         element.innerHTML = `\r\n    //           <th scope=\"row\">${order.userID}</th>\r\n    //           <td>${order.orderDate.substring(0,10)}</td>\r\n    //           <td>$${order.Total.toFixed(2)}</td>\r\n    //         `;\r\n    //         modalTable.appendChild(element);\r\n    //       });\r\n    //       customerModal.show();\r\n    //     }\r\n    //   }\r\n    // })\r\n  \r\n}\r\n  \r\n\r\nasync function addUser(){\r\n    console.log(\"adding\");\r\n    if(document.getElementById('new-first-name').value.length > 0 &&\r\n        document.getElementById('new-last-name').value.length > 0 &&\r\n        document.getElementById('new-zip-code').value > 0 &&\r\n        document.getElementById('new-email').value.length > 0 &&\r\n        document.getElementById('new-password').value.length > 0 &&\r\n        document.getElementById('new-admin-status').value != null){\r\n\r\n        var req = new XMLHttpRequest();\r\n        var user = {firstName: null, lastName: null, zipCode: null, email: null, password: null, adminStatus: null};\r\n        user.firstName = document.getElementById('new-first-name').value;\r\n        user.lastName = document.getElementById('new-last-name').value;\r\n        user.zipCode = document.getElementById('new-zip-code').value;\r\n        user.email = document.getElementById('new-email').value;\r\n        user.password = document.getElementById('new-password').value;\r\n        user.adminStatus = document.getElementById('new-admin-status').value;\r\n\r\n        // var payload = \"/admin/newCustomer/?firstName=\" + \r\n        //     user.firstName + \"&lastName=\" + user.lastName + \r\n        //     \"&zipCode=\" + user.zipCode + \"&email=\" + user.email +\r\n        //     \"&password=\" + user.password + \"&adminStatus=\" + user.adminStatus;\r\n\r\n        // console.log(\"sending \" + payload);\r\n        // req.open(\"POST\", payload, true);\r\n        // await req.send();\r\n        // console.log(req.status);\r\n        // location.reload();\r\n        console.log(\"add user button enabled\")\r\n    }\r\n    else{\r\n        console.log(\"invlaid input\");\r\n    }\r\n}\r\n  \r\n  \r\nfunction populateUpdate(){\r\n    var id = document.getElementById('update-user-pk-menu').value;\r\n    var firstName = document.getElementById('firstName-' + id).value;\r\n    var lastName = document.getElementById('lastName-' + id).value;\r\n    var zipCode = document.getElementById('zipCode-' + id).value;\r\n    var email = document.getElementById('email-' + id).value;\r\n    var adminStatus = document.getElementById('adminStatus-' + id).value\r\n  \r\n    document.getElementById('update-first-name').value = firstName;\r\n    document.getElementById('update-last-name').value = lastName;\r\n    document.getElementById('update-zip-code').value = zipCode;\r\n    document.getElementById('update-email').value = email;\r\n    document.getElementById('update-admin-status').value = adminStatus;\r\n}\r\n  \r\nfunction updateCustomer(){\r\n    if(document.getElementById('update-user-pk-menu').value != 'number' &&\r\n     document.getElementById('update-first-name').value.length > 0 &&\r\n     document.getElementById('update-last-name').value.length > 0 &&\r\n     document.getElementById('update-zip-code').value > 0 &&\r\n     document.getElementById('update-email').value.length > 0){\r\n  \r\n      var req = new XMLHttpRequest();\r\n      var user = {userID: null, firstName: null, lastName: null, zipCode: null, email:null, password:null, adminStatus:null}\r\n      \r\n      user.userID = document.getElementById('update-user-pk-menu').value;\r\n      user.firstName = document.getElementById('update-first-name').value;\r\n      user.lastName = document.getElementById('update-last-name').value;\r\n      user.zipCode = document.getElementById('update-zip-code').value;\r\n      user.email = document.getElementById('update-email').value;\r\n      user.password =document.getElementById('update-password').value;\r\n      user.adminStatus =document.getElementById('update-admin-status').value;\r\n\r\n    //   var payload = \"/siteAdmin/updateUsers?userID=\"+ user.userID + \"&firstName=\" + \r\n    //   user.firstName + \"&lastName=\" + user.lastName + \"&zipCode=\" + user.zipCode + \r\n    //   \"&email=\" + user.email + \"&password=\" + user.password + \"&adminStatus=\" + user.adminStatus;\r\n\r\n    //   console.log(\"sending \" + payload);\r\n    //   req.open(\"POST\", payload, true);\r\n    //   req.send();\r\n    //   location.reload();\r\n      console.log(\"populate enabled\")\r\n    }\r\n    else{\r\n      console.log(\"invlaid input\");\r\n    }\r\n}\r\n  \r\n  \r\n  \r\nfunction selectProperty(){\r\n    if(document.getElementById('searchBar').value.length  > 0 && \r\n      document.getElementById('atribute-form').value.length > 0 && \r\n      document.getElementById('atribute-form').value != 'Attribute'){\r\n    \r\n        document.getElementById(\"loadingbar\").style.display = \"inline\";\r\n    \r\n        var req = new XMLHttpRequest();\r\n        var search = {property: null, value: null};      \r\n        search.property = document.getElementById('atribute-form').value;\r\n        search.value = document.getElementById('searchBar').value;\r\n        // var payload = \"/siteAdmin/searchUsers?property=\" + search.property + \"&value=\" + search.value;\r\n        // console.log(\"sending \" + payload);\r\n        // req.open(\"GET\", payload, true);\r\n        // req.send();\r\n        console.log('search Enabled')\r\n        var response;\r\n        req.onreadystatechange = function(){\r\n            if (req.readyState === XMLHttpRequest.DONE && req.status >= 200 && req.status < 300) {\r\n                response = req.responseText;\r\n                response = JSON.parse(response);\r\n        \r\n                let mainList = document.getElementById(\"main-rows\");\r\n                let userPK = document.getElementById(\"update-user-pk-menu\");\r\n        \r\n                let users = Array();\r\n                \r\n                while(mainList.firstChild){\r\n                    mainList.removeChild(mainList.firstChild)\r\n                }\r\n                while(userPK.firstChild){\r\n                    userPK.removeChild(userPK.firstChild)\r\n                }\r\n        \r\n                response.forEach(user => {\r\n                    if(user.userID != 1){\r\n                    users.push(new customerEntry(user.userID, user.firstName, user.lastName, user.zipCode, user.email, user.adminStatus));\r\n                    }\r\n                });\r\n        \r\n        \r\n                users.forEach((user) => { \r\n                    mainList.appendChild(user.generateRow());\r\n                    userPK.append(user.generateOption());\r\n                    addEventListeners(user);\r\n                })\r\n        \r\n                document.getElementById(\"addUserButton\").addEventListener(\"click\", () => {\r\n                    addCustomer();\r\n                });\r\n                \r\n                document.getElementById(\"updateUserButton\").addEventListener(\"click\", () => {\r\n                    updateCustomer();\r\n                });\r\n        \r\n                document.getElementById('update-user-pk-menu').addEventListener(\"change\", () => {\r\n                    populateUpdate();\r\n                });\r\n                \r\n                document.getElementById(\"searchButton\").addEventListener(\"click\", () => {\r\n                    selectProperty()\r\n                });\r\n            \r\n            }\r\n        }\r\n    }\r\n}\r\n  \r\n  \r\nconst setupList = async () => {\r\n    console.log(\"setupList executed\")\r\n    let mainList = document.getElementById(\"main-rows\");\r\n    let userPK = document.getElementById(\"update-user-pk-menu\");\r\n    let users = Array();\r\n  \r\n    // // Get item list from server\r\n    // const response = await fetch('/siteAdmin/userList');\r\n    // const parsedJson = await response.json();\r\n    // console.log(parsedJson);\r\n  \r\n    // parsedJson.forEach(user => {\r\n    //   if(user.userID != 1){\r\n    //     users.push(new customerEntry(user.userID, user.firstName, user.lastName, user.zipCode, user.email, user.adminStatus));\r\n    //   }\r\n    // });\r\n  \r\n  \r\n    // // Activate buttons for detailed item views\r\n    // users.forEach((user) => { \r\n    //   mainList.appendChild(user.generateRow());\r\n    //   userPK.append(user.generateOption());\r\n    //   addEventListeners(user);\r\n    // })\r\n  \r\n    document.getElementById(\"addUserButton\").addEventListener(\"click\", () => {\r\n      addUser();\r\n    });\r\n  \r\n    document.getElementById(\"updateUserButton\").addEventListener(\"click\", () => {\r\n      updateUser();\r\n    });\r\n  \r\n    document.getElementById(\"searchButton\").addEventListener(\"click\", () => {\r\n      selectProperty()\r\n    });\r\n  \r\n  \r\n    document.getElementById('update-user-pk-menu').addEventListener(\"change\", () => {\r\n      populateUpdate();\r\n    });\r\n  \r\n    document.getElementById(\"loadingbar\").style.display = \"none\";\r\n};\r\n  \r\n  \r\n  \r\nconsole.log(\"Running successfully!\");\r\nsetupList();\n\n//# sourceURL=webpack://capstone/./src/siteAdmin/usersSA.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/siteAdmin/usersSA.js"]();
/******/ 	
/******/ })()
;