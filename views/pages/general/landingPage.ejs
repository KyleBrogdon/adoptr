<!DOCTYPE html>
<html>
  <head>
    <%- include('../../partials/head'); %>
    <title>adoptr</title>
  </head>
  <body>

    <%- include('../../partials/header'); %>
    <div class="container">
      
      <h1 class="display-2">Landing Page</h1>
    </div>
    
    <button><a class="nav-link" href="/landing/siteAdminIndex">siteAdminIndex</a></button>
    <button><a class="nav-link" href="/landing/login">login</a></button>
    <button><a class="nav-link" href="/landing/shelterAdminTest">shelterAdmin</a></button>
    <button><a class="nav-link" href="/landing/userTest">user</a></button>



    <!-- Need to insert pet data here-->
    <div class="cardcontainer list">
        <ul class="cardlist">
          <li class="card current">#1</li>
          <li class="card">#2</li>
          <li class="card">#3</li>
          <li class="card">#4</li>
          <li class="card">#5</li>
          <li class="card">#6</li>
        </ul>
        <br>
            <button class="but-nope" type = 'submit' id = 'but-nope1'>X</button>
            <button class="but-yay" type = 'submit' id = 'but-yay'>âœ”</button>
      </div>


          <!-- Trying to figure out how to push data back to DB without triggering reload.
                Do we do one like at a time or stack a list and push the list back?--> 
      <script type ='text/javascript' src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js">
        $('#but-nope1').submit(function (e) {
            console.log('button'); 
            alert('form submit');
            e.preventDefault();
            var fd = new FormData(this);
            // push data back
           });
      </script>

      <script>
        (function(){
            var animating = false;
          
            function animatecard(ev) {
              if (animating === false) {
                var t = ev.target;
                if (t.className === 'but-nope') {
                  t.parentNode.classList.add('nope');
                  animating = true;
                  fireCustomEvent('nopecard',
                    {
                      origin: t,
                      container: t.parentNode,
                      card: t.parentNode.querySelector('.card')
                    },
                  );
                }
                if (t.className === 'but-yay') {
                  t.parentNode.classList.add('yes');
                  animating = true;
                  fireCustomEvent('yepcard',
                    {
                      origin: t,
                      container: t.parentNode,
                      card: t.parentNode.querySelector('.card')
                    }
                  );
                }
                if (t.classList.contains('current')) {
                  fireCustomEvent('cardchosen',
                    {
                      container: getContainer(t),
                      card: t
                    }
                  );
                }
              }
            }
          
            function fireCustomEvent(name, payload) {
              var newevent = new CustomEvent(name, {
                detail: payload
              });
              document.body.dispatchEvent(newevent);
            }
          
            // get which card container was liked or discarded
            function getContainer(elm) {
              var origin = elm.parentNode;
              if (!origin.classList.contains('cardcontainer')){
                origin = origin.parentNode;
              }
              return origin;
            }
          
            // handles removing cards from the list once animation has finished
            function animationdone(ev) {
              animating = false;
              var origin = getContainer(ev.target);
              if (ev.animationName === 'yay') {
                origin.classList.remove('yes');
              }
              if (ev.animationName === 'nope') {
                origin.classList.remove('nope');
              }
              if (origin.classList.contains('list')) {
                if (ev.animationName === 'nope' ||
                    ev.animationName === 'yay') {
                  origin.querySelector('.current').remove();
                  if (!origin.querySelector('.card')) {
                    fireCustomEvent('deckempty', {
                      origin: origin.querySelector('button'),
                      container: origin,
                      card: null
                    });
                  } else {
                    origin.querySelector('.card').classList.add('current');
                  }
                }
              }
            }
            document.body.addEventListener('animationend', animationdone);
            document.body.addEventListener('webkitAnimationEnd', animationdone);
            document.body.addEventListener('click', animatecard);
            window.addEventListener('DOMContentLoaded', function(){
              document.body.classList.add('datingCard');
            });
          })();
          
      </script>

      <!-- Adjust here to push back data to db?-->
      <script>
        document.body.addEventListener('nopecard', function(ev) {
            console.log(ev.detail);
         });
         document.body.addEventListener('yepcard', function(ev) {
            console.log(ev.detail);
         });
         document.body.addEventListener('deckempty', function(ev) {
            console.log(ev.detail);
         });
         document.body.addEventListener('cardchosen', function(ev) {
            console.log(ev.detail);
         });
       
       // convoluted way of tracking a list of yes or no
         document.body.addEventListener('nopecard', function(ev) {
           var container = ev.detail.container;
           var label = container.querySelector('.nopes');
           if (label) {
             var nopes = +container.nopes || 0;
             nopes++;
             container.nopes = nopes;
             label.innerHTML = container.nopes;
           }
         });
       
         document.body.addEventListener('yepcard', function(ev) {
           var container = ev.detail.container;
           var label = container.querySelector('.yays');
           if (label) {
             var yeps = +container.yeps || 0;
             yeps++;
             container.yeps = yeps;
             label.innerHTML = container.yeps;
           }
         });
       
         // reloads more cards when list runs out. Need to adjust and tweak for db.
         document.body.addEventListener('deckempty', function(ev) {
           var container = ev.detail.container;
           var list = container.querySelector('.cardlist');
           var out = '<li class="card current">#1</li>';
           for (var i = 2; i < 6; i++) {
             out += '<li class="card">#' + i + '</li>';  //rework to load next 6 items from db
           }
           list.innerHTML = out;
         });
      </script>
    
    <%- include('../../partials/footer'); %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" 
            integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" 
            crossorigin="anonymous">
    </script>
  </body>
</html>